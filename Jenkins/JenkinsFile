
properties([ 
	parameters([
	separator(name:"Refresh the Jenkins File",sectionHeader: "Jnekins File"),
	booleanParam(name: 'Refresh', defaultValue: false, description: 'Read Jenkinsfile and exit.'),
	string(name: 'Jenkins',description:'Keep this checked if you want to run this project Jenkins file' ),
	separator(name:"Refresh the Jenkins File",sectionHeader: "Enter the feature you want to Test"),
	extendedChoice(defaultValue: 'RunEntireSuite', description: '', descriptionPropertyValue: 'RunEntireSuite', multiSelectDelimiter: ',', name: 'favColor', quoteValue: false, saveJSONParameterToFile: false, type: 'PT_MULTI_SELECT', value: 'RunEntireSuite,blue,green,yellow,black,orange,red', visibleItemCount: 5),
	booleanParam(name:'Login',defaultValue:true, description:'select login feature to run'),
	booleanParam(name:'Application',defaultValue:false, description:'select Application feature to run'),
	booleanParam(name:'TearDown',defaultValue:false, description:'select TearDown feature to run'),
	booleanParam(name:'AddTemplate',defaultValue:false, description:'select AddTemplate feature to run'),
	//booleanParam(name:'RunEntireSuite',defaultValue:false, description:'This will run RunEntireSuite'),
	separator(name:"Refresh the Jenkins File",sectionHeader: "Select the Web to run the tests"),
	booleanParam(name:'Chrome',defaultValue:false, description:'select Chrome to run'),
	booleanParam(name:'Firefox',defaultValue:false, description:'select Firefox to run'),
	booleanParam(name:'Edge',defaultValue:false, description:'select Edge to run'),
	booleanParam(name:'Safari',defaultValue:false, description:'select Safari to run'),
	
	])
	
 ])
echo "${params.favColor}"
 def web =[ 
 Chrome:params.Chrome,
 Firefox:params.Firefox,
 Edge:params.Edge,
 Safari:params.Safari
  ]
  echo"1"
  
  def Group = params.favColor
   def features=[]
   features=Group.split(',')   
   if(features.contains("RunEntireSuite") && features.size()>1){
   features -= "RunEntireSuite"
   def Groups = features.join(",")
   Group = Groups
   echo "${Group}"
   }
   else{
      echo "${Group}"
   } 
   
   def Test = [ "A", "B","C" ]
   Test.each{
       if(Test.contains("A")){
           echo "Contains worked"
       }

   }



   

 //def Fee=[ 
 //Login: params.Login,
 //Application: params.Application,
 //TearDown: params.TearDown,
 //AddTemplate : params.AddTemplate
  //]
 
  

  echo "2"
 //def FeaturesSelected=[]
 //def count =0
  //Fee.each{
    //  if(it.value){
      // count++
  //FeaturesSelected << "${it.key}"
    //  }
  //}
  
 // FeaturesSelected.eachWithIndex{
   //   feature,i->
     // if(feature=="Login" && count>1 && params.Login){
       //   FeaturesSelected.remove(i)
      //}
 // }
  
	 //def Group= ""
      //FeaturesSelected.eachWithIndex{
      //feature,i->
      //if(i==0){
        //  Group=feature
      //}
     // if(i>0){
     //     Group=Group+","+feature
   //   }
 // }

  //echo "${Group}"
  //def stageName=[]
 // stageName<<Group

// echo "${stageName}"

echo"3"
pipeline{ 
//parameters {
                  //  extendedChoice(defaultValue: 'blue,green,yellow,blue', description: '', descriptionPropertyValue: 'blue,green,yellow,blue', multiSelectDelimiter: ',', name: 'favColor', quoteValue: false, saveJSONParameterToFile: false, type: 'PT_MULTI_SELECT', value: 'blue,green,yellow,blue', visibleItemCount: 5)
                //} 
    agent any    
    environment{
        LOGIN_KEY = credentials('Uday1996')
    }

        stages{ 
          stage('Read Jenkinsfile') {
            when {
                expression {
                    return params.Refresh == true
                }
            }
            steps {
                echo "Jenkinsfile reloaded successfully and Exiting early"
            }
        }          
            stage('${Group}'){                  
                    steps{
                  		  script{
                  		  
									  //echo "${Group}"
                          if(params.Login){
                        //echo 'Run the login method'
                    }
                    else {
                        //echo 'Run the Application method'
                    }   
                    }   
                     // echo 'Hello world'
                       // echo "Hello ${params.Jenkins}" 
                       // echo "You have selected ${params.Feature}"
                    }
                }
                stage('Execute the Feature'){
                                	steps{
						    script{
						    web.each{
						    if(it.value){
						       stage(it.key){
						          def browser= "${it.key}"
						          catchError{
						           echo "Inside catch Error"
						          }

						      
						       }
						    }
						} 
						
                }
                }
                }
                stage('read Parameter'){
                steps{
                

                    script{
                    
                     if(params.Application){
                         echo "Condition passed"
                     }

                            stage("Running ${Group}"){
                            if("${Group}" != ""){
                                echo "Inside if loop"
                            }
                            else if("${Group}" == ""){
                                echo "Inside Else Loop"
                            }


                                echo "We are inside the read parameter"
                            }

                       

                    }
                }
                }

					//stage('Read the Group List'){
                                   // steps{
                                       // script{
                                         //   Groups.each{
                                         //   def Group =it
                                            //    echo "${Group}"                                           }

                                        //}

                                   // }

                                //}
                
            }            
        
        post{
            always{
           
                echo 'Say Hello again'
            }
        }
}
